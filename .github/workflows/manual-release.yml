name: manual-release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'feat/publish-pro-plugin-repo'
  workflow_dispatch:
    inputs:
      is_feat:
        description: 'is feat'
        type: boolean

jobs:
  pre-merge-main-into-next:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - 'nocobase/nocobase'
          - 'nocobase/pro-plugins'
          - ${{ fromJSON(vars.PRO_PLUGIN_REPOS) }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.NOCOBASE_APP_ID }}
          private-key: ${{ secrets.NOCOBASE_APP_PRIVATE_KEY }}
          owner: '2013xile'
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # ref: 'main'
          repository: ${{ matrix.repo }}
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      - name: main -> next(${{ matrix.repo }})
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'
          # git checkout main
          # git pull origin main
          # git checkout next
          # git merge main
          # git push origin next --tags --atomic
  # update-version:
  #   needs: pre-merge-main-into-next
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         repository: nocobase/nocobase
  #         ssh-key: ${{ secrets.NOCOBASE_DEPLOY_KEY }}
  #         persist-credentials: true
  #         fetch-depth: 0
  #     - name: Checkout pro-plugins
  #       uses: actions/checkout@v4
  #       with:
  #         repository: nocobase/pro-plugins
  #         path: packages/pro-plugins
  #         fetch-depth: 0
  #         ssh-key: ${{ secrets.PRO_PLUGINS_DEPLOY_KEY }}
  #         persist-credentials: true
  #     - name: Clone pro repos
  #       run: |
  #         for repo in ${{ join(fromJSON($vars.PRO_PLUGIN_REPOS), ' ') }}
  #         do
  #           git clone -b main https://${{ secrets.GITHUB_APP_TOKEN }}@github.com/$repo.git packages/pro-plugins
  #         done
  #     - name: Set Node.js 18
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Install Lerna
  #       run: npm install -g lerna@4 auto-changelog@2
  #     - name: Run release.sh
  #       run: |
  #         cd ./packages/pro-plugins
  #         git checkout main
  #         cd ./../..
  #         git checkout main
  #         git config --global user.email "actions@github.com"
  #         git config --global user.name "GitHub Actions Bot"
  #         echo "packages/pro-plugins/" >> .git/info/exclude
  #         bash release.sh $IS_FEAT
  #       env:
  #         IS_FEAT: ${{ inputs.is_feat && '--is-feat' || '' }}
  #         PRO_PLUGIN_REPOS: ${{ vars.PRO_PLUGIN_REPOS }}
  #     - name: push pro repos
  #       run: |
  #         for repo in ${{ join(fromJSON($vars.PRO_PLUGIN_REPOS), ' ') }}
  #         do
  #           cd ./packages/pro-plugins/$repo
  #           git push origin main --atomic --tags
  #         done
  #     - name: push pro plugins
  #       continue-on-error: true
  #       uses: ad-m/github-push-action@master
  #       with:
  #         ssh: true
  #         branch: main
  #         directory: packages/pro-plugins
  #         repository: nocobase/pro-plugins
  #         tags: true
  #         atomic: true
  #     - name: push nocobase
  #       uses: ad-m/github-push-action@master
  #       with:
  #         branch: main
  #         ssh: true
  #         repository: nocobase/nocobase
  #         tags: true
  #         atomic: true
  # post-merge-main-into-next:
  #   needs: update-version
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       repo:
  #         - 'nocobase/nocobase'
  #         - 'nocobase/pro-plugins'
  #         - ${{ fromJSON(vars.PRO_PLUGIN_REPOS) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         repository: ${{ matrix.repo }}
  #         fetch-depth: 0
  #         token: ${{ SECRETS.GITHUB_APP_TOKEN }}
  #     - name: main -> next(${{ matrix.repo }})
  #       run: |
  #         git config --global user.email "actions@github.com"
  #         git config --global user.name "GitHub Actions Bot"
  #         git checkout main
  #         git pull origin main
  #         git checkout next
  #         git merge -X ours main --no-edit
  #         git push origin next --tags --atomic
